password123,user1,u0001
#password,uesrname,userid 

OR

#password, username, userid, group

--basic-auth-file=user-details.csv


Usage
curl -v -k https://master-node-ip:6443/api/v1/pods -u "user1:password123"



token Usage

user-token-details.csv
dsakfldsajlfj,user10,u0010,group1

--token-auth-file=user-details.csv 


curl -v -k https://master-node-ip:6443/api/v1/pods --header "Authorization: Bearer dsakfldsajlfj"


/tmp/users/user-details.csv

/etc/kubernetes/manifests/kube-apiserver.yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --authorization-mode=Node,RBAC
      <content-hidden>
    - --basic-auth-file=/tmp/users/user-details.csv


---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
 
---
# This role binding allows "jane" to read pods in the "default" namespace.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
  namespace: default
subjects:
- kind: User
  name: user1 # Name is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role #this must be Role or ClusterRole
  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io

curl -v -k https://localhost:6443/api/v1/pods -u "user1:password123"
