Master Node:
kubectl drain  master --ignore-daemonsets
apt update
apt-get install kubeadm=1.19.0-00
kubeadm  upgrade plan v1.19.0
kubeadm  upgrade apply v1.19.0
apt-get install kubelet=1.19.0-00
kubectl uncordon master
kubectl drain node01 --ignore-daemonsets


Node01:
apt update
apt-get install kubeadm=1.19.0-00
kubeadm upgrade node --kubelet-version v1.19.0
apt-get install kubelet=1.19.0-00


Back on Master:
kubectl uncordon node01
kubectl get pods -o wide | grep gold (make sure this is scheduled on master node)




kubectl -n admin2406 get deployment -o custom-columns=DEPLOYMENT:.metadata.name,CONTAINER_IMAGE:.spec.template.spec.containers[].image,READY_REPLICAS:.status.readyReplicas,NAMESPACE:.metadata.namespace --sort-by=.metadata.name > /opt/admin2406_data




kubectl create deployment  nginx-deploy --image=nginx:1.16
kubectl set image deployment/nginx-deploy nginx=nginx:1.17 --record



Q) Take the backup of ETCD at the location /opt/etcd-backup.db on the master node
export ETCDCTL_API=3
etcdctl snapshot save --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --endpoints=127.0.0.1:2379 /opt/etcd-backup.db




apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: secret-1401
  name: secret-1401
  namespace: admin1401
spec:
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret
  containers:
  - command:
    - sleep
    args:
    - "4800"
    image: busybox
    name: secret-admin
    volumeMounts:
    - name: secret-volume
      readOnly: true
      mountPath: "/etc/secret-volume"
